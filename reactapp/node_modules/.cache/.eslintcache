[{"/home/priyanshu/Desktop/rebook/main/reactapp/src/index.js":"1","/home/priyanshu/Desktop/rebook/main/reactapp/src/reportWebVitals.js":"2","/home/priyanshu/Desktop/rebook/main/reactapp/src/App.js":"3","/home/priyanshu/Desktop/rebook/main/reactapp/src/components/Trade.js":"4","/home/priyanshu/Desktop/rebook/main/reactapp/src/components/Navbar.js":"5","/home/priyanshu/Desktop/rebook/main/reactapp/src/components/Test.js":"6","/home/priyanshu/Desktop/rebook/main/reactapp/src/components/About.js":"7","/home/priyanshu/Desktop/rebook/main/reactapp/src/components/Shared.js":"8","/home/priyanshu/Desktop/rebook/main/reactapp/src/components/Api.js":"9","/home/priyanshu/Desktop/rebook/main/reactapp/src/components/Cart.js":"10","/home/priyanshu/Desktop/rebook/main/reactapp/src/components/Signup.js":"11","/home/priyanshu/Desktop/rebook/main/reactapp/src/contexts/AuthContext.js":"12","/home/priyanshu/Desktop/rebook/main/reactapp/src/firebase.js":"13"},{"size":535,"mtime":1685366678984,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1685366678984,"results":"16","hashOfConfig":"15"},{"size":1192,"mtime":1689156963542,"results":"17","hashOfConfig":"15"},{"size":153,"mtime":1685709876155,"results":"18","hashOfConfig":"15"},{"size":2848,"mtime":1688158138511,"results":"19","hashOfConfig":"15"},{"size":4542,"mtime":1685972946567,"results":"20","hashOfConfig":"21"},{"size":181,"mtime":1688733056433,"results":"22","hashOfConfig":"15"},{"size":7366,"mtime":1688746040653,"results":"23","hashOfConfig":"15"},{"size":7390,"mtime":1688910820775,"results":"24","hashOfConfig":"15"},{"size":2034,"mtime":1686150135371,"results":"25","hashOfConfig":"21"},{"size":1966,"mtime":1689161453378,"results":"26","hashOfConfig":"15"},{"size":736,"mtime":1689156521450,"results":"27","hashOfConfig":"15"},{"size":497,"mtime":1689086872914,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1tpgadt",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"8acf01",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/priyanshu/Desktop/rebook/main/reactapp/src/index.js",[],[],[],"/home/priyanshu/Desktop/rebook/main/reactapp/src/reportWebVitals.js",[],[],"/home/priyanshu/Desktop/rebook/main/reactapp/src/App.js",["71","72","73","74","75","76","77","78"],[],"/home/priyanshu/Desktop/rebook/main/reactapp/src/components/Trade.js",[],[],"/home/priyanshu/Desktop/rebook/main/reactapp/src/components/Navbar.js",[],[],"/home/priyanshu/Desktop/rebook/main/reactapp/src/components/Test.js",["79","80","81","82","83","84","85","86","87","88","89","90"],[],"/home/priyanshu/Desktop/rebook/main/reactapp/src/components/About.js",[],[],"/home/priyanshu/Desktop/rebook/main/reactapp/src/components/Shared.js",["91","92"],[],"import React,{useEffect,useState} from 'react';\nimport io from 'socket.io-client';\nimport './shared.css';\nconst socket= io.connect(\"http://10.113.19.100:3009\");\nconst Shared = () => {\n  const [message,setMessage]=useState(\"\");\n  const[mReceived,setMReceived]=useState(\"\");\n  const [userInput, setUserInput] = useState('');\n  const [result, setResult] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [author, setAuthor] = useState('');\n  const [genre, setGenre] = useState('');\n  const [pages, setPages] = useState('');\n  // const [data,setData]=useState([]);\n  // const socketRef=useRef(null);\n  // useEffect(()=>{\n  //   socketRef.current =io('localhost:3000/shared');\n\n  //   socketRef.current.on('message',(data)=>{\n  //     console.log('recived message:',data);\n  //   });\n  //   return()=>{\n  //     socketRef.current.disconnect();\n\n  //   };\n  // },[]);\n\nconst sendMessage=()=>{\n  \n  // const message='hello server';\n  // socketRef.current.emit('message',message);ket.emit()\n  socket.emit(\"send_message\",{message});\n\n};\nuseEffect(()=>{\n  socket.on(\"receive_message\",async (data)=>{\n    await setMReceived(data.message);\n    handleTrade(data.message);\n\n  })\n})\n\nconst handleTrade = (title) => {\n  const apiUrl = `https://www.googleapis.com/books/v1/volumes?q=${title}&projection=full&maxResults=5`;\n\n  fetch(apiUrl)\n    .then(response => response.json())\n    .then(data => {\n      const found = checkCharacterExists(data, userInput);\n      if (found) {\n       \n        const bookInfo = getBookInfo(data, userInput);\n        setImageUrl(bookInfo.imageLink);\n        setAuthor(bookInfo.author);\n        setGenre(bookInfo.genre);\n        setPages(bookInfo.pages);\n        setResult('');\n      } else {\n        setResult('Book Not found :(');\n        setImageUrl('');\n        setAuthor('');\n        setGenre('');\n        setPages('');\n      }\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    });\n};\n\nconst checkCharacterExists = (data, char) => {\n  const items = data.items || [];\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const volumeInfo = item.volumeInfo || {};\n    const title = volumeInfo.title || '';\n    if (title.toLowerCase().includes(char.toLowerCase())) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst getBookInfo = (data, searchQuery) => {\n  const items = data.items || [];\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const volumeInfo = item.volumeInfo || {};\n    const title = volumeInfo.title || '';\n    const imageLinks = volumeInfo.imageLinks || {};\n    const thumbnail = imageLinks.thumbnail || '';\n    const authors = volumeInfo.authors || [];\n    const author = authors.join(', ');\n    const genre = volumeInfo.categories ? volumeInfo.categories[0] : 'Unknown Genre';\n    const pages = volumeInfo.pageCount || 'Unknown';\n\n    if (title.toLowerCase().includes(searchQuery.toLowerCase())) {\n      return { imageLink: thumbnail, author, genre, pages };\n    }\n  }\n};\n\n\n\n\n  // return (\n  //   <div>\n  //     <div>\n  //     <h1>Socket.io</h1>\n  //     <input placeholder=\"message\" onChange={(e)=>{\n  //       setMessage(e.target.value);\n  //     }} />\n  //     <button onClick={sendMessage}>send message</button>\n  //     <h1>message</h1>\n  //     {mReceived}\n  //     <br />\n  //     </div>\n\n  //     <div class=\"card\">\n  //       <div class=\"card-body\">\n        \n  //       <nav className=\"navbar\">\n  //         <span className=\"navbar-brand\" >Search Your Book <p>  </p></span>\n  //       </nav>\n  //       <div className=\"container\">\n  //         <div className=\"search-box\">\n  //           {/* <input type=\"text\" value={userInput} onChange={handleInputChange} onKeyDown={handleKeyDown}  */}\n  //           {/* placeholder=\"Enter book name\" /> */}\n            \n  //           {/* <button onClick={handleButtonClick} type='submit'>Search</button> */}\n  //         </div>\n          \n  //         <div >\n            \n  //           <p></p>\n  //           {result && <p className=\"result\">{result}</p>}\n  //           {imageUrl && <img className=\"book-image\" src={imageUrl} alt=\"Book Cover\" width=\"150\" height=\"200\" class=\"d-inline-block 2align-center\" />}\n  //           {userInput && <p className=\"book-name\">: {userInput}</p>}\n  //           {author && <p className=\"book-info\">Author: {author}</p>}\n  //           {genre && <p className=\"book-info\">Genre: {genre}</p>}\n  //           {pages && <p className=\"book-info\">Pages: {pages}</p>}\n  //         </div>\n  //           {/* <button   type=\"Submit\" onClick={handleCombinedClick} style={{display: 'block', margin: '0 auto',fontFamily: ' serif'}}  >Add Book</button> */}\n           \n  //         </div>\n  //       </div>\n  //     </div>\n  //   </div>\n    \n  // )\n  // return (\n  //   <div>\n  //     <div class=\"container\">\n      \n  \n      \n        \n        \n  //       <div className=\"bookcard\">\n  //         <p>{result && <p key=\"result\">{result}</p>}</p>\n  //         {imageUrl && <img className=\"book-image\" src={imageUrl} alt=\"Book Cover\" width=\"150\" height=\"200\" class=\"d-inline-block 2align-center\" />}\n  //         <p>\n  //           <div className=\"details\">\n  //             {userInput && <p className=\"book-name\">: {userInput}</p>}\n  //             {author && <p className=\"book-info\"><b>Author :</b> <b>{author}</b></p>}\n  //             {genre && <p className=\"book-info\"><b>Genre:</b> <b>{genre}</b></p>}\n  //             {pages && <p className=\"book-info\"><b>Pages:</b> <b>{pages}</b></p>}\n  //           </div>\n  //         </p>\n  //         <div className=\"chatbox\">\n  //           <h1>Chat</h1>\n  //           <input placeholder=\"message\" onChange={(e) => {\n  //             setMessage(e.target.value);\n  //           }} />\n  //           <button >Send Message</button>\n  //           {/* <h1>Message</h1> */}\n  //           <br />\n  //           <br />\n  //           <br />\n  //           <p>message : {mReceived} </p>\n            \n  //           <br />\n  //         </div>\n  //       </div>\n  //     </div>\n         \n  //   </div>\n  // );\n  return (\n    <div class=\"test\">\n      <div class=\"container\">\n        <div className=\"bookcard\">\n          <p>{result && <p key=\"result\">{result}</p>}</p>\n          {imageUrl && <img className=\"book-image\" src={imageUrl} alt=\"Book Cover\" width=\"150\" height=\"200\" class=\"d-inline-block 2align-center\" />}\n          <p>\n            <div className=\"details\">\n              {userInput && <p className=\"book-name\">: {userInput}</p>}\n              {author && <p className=\"book-info\"><b>Author :</b> <b>{author}</b></p>}\n              {genre && <p className=\"book-info\"><b>Genre:</b> <b>{genre}</b></p>}\n              {pages && <p className=\"book-info\"><b>Pages:</b> <b>{pages}</b></p>}\n            </div>\n          </p>\n        </div>\n        <div className=\"chatbox\">\n            <h1>Chat</h1>\n            \n            <form action=\"#\" id=\"send-container\">\n            <input Name=\"messageInp\" placeholder=\"message\" id=\"messageInp\"  onChange={(e) => {\n              setMessage(e.target.value);}}></input>\n                  <button class=\"btn\">Send</button>\n         </form>\n            {/* <h1>Message</h1> */}\n            <br />\n            <br />\n            <br />\n            <p>message : {mReceived} </p>\n            \n            <br />\n          </div>\n      </div>\n         \n    </div>\n  );\n};\n\nexport default Shared;","/home/priyanshu/Desktop/rebook/main/reactapp/src/components/Api.js",["93"],[],"import React, { useEffect,useState } from 'react';\nimport axios from 'axios';\nimport './Api.css';\nimport io from 'socket.io-client';\nconst socket= io.connect(\"http://10.113.19.100:3009\");\n\n// to run: http://10.113.19.100:3000\n// database: python manage.py runserver 0.0.0.0:9595\n// server: yarn start\n// envnt bin: source /home/priyanshu/myDjangoproject/my_env/bin/activate \n\n\n\n\nfunction Api(){\n  const [userInput, setUserInput] = useState('');\n  const [result, setResult] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [author, setAuthor] = useState('');\n  const [genre, setGenre] = useState('');\n  const [pages, setPages] = useState('');\n  const [data,setData]=useState([]);\n  const [message,setMessage]=useState(\"\");\n  // const [redirectUrl,setRedirectUrl]=useState(\"\");\n\n  // const handleRedirect=(url)=>{\n  //   setRedirectUrl(url);\n  // };\n  // if\n  \n  // const combinedClickTrade = async(e)=>{\n  //   setMessage(e);\n  //   sendMessage();\n\n\n  // };\n\n\n  const sendMessage = (message) =>{\n    setMessage(message);\n    console.log(message);\n    socket.emit(\"send_message\",{message});  \n  };\n  // <button onClick={()=>{\n    //   sendMessage(item.title);\n    // }}><b>Trade</b></button>\n// <button onClick={()=>{\n    //   sendMessage(item.title);\n    // }}><b>Trade</b></button>\n\n\n  // useEffect(()=>{\n  //   socket.emit(\"send_message\",{message});\n  // })\n  // <button onClick={()=>{\n    //   sendMessage(item.title);\n    // }}><b>Trade</b></button>\n\n  // useEffect(()=>{\n  //   socket.on(\"receive_message\",(data)=>{\n  //     setMReceived(data.message)\n  //   })\n  // })\n\n  useEffect(()=>{\n    const fetchData = async() => {\n      try{\n        const response = await axios.get('http://0.0.0.0:9595//data/');\n        setData(response.data);\n      }catch(error){\n        console.error(error)\n      }\n    };\n    fetchData();\n  },[]);\n\n  const handleRefresh = () => {\n    window.location.reload();\n  };\n\n  const handleCombinedClick = async (e) =>{\n    await handleSubmit(e);\n    handleRefresh();\n  };\n\n  // const RecordItem=({record,onDelete})=>{\n  //   const handleDelete=()=>{\n  //     onDelete(record.title)\n  //   }\n  // };\n\n  const handleDelete= async(title)=>{\n    try{\n      // await axios.post(`http://127.0.0.1:8000/delete/${title}/`);\n      await fetch(`http://0.0.0.0:9595//delete/${title}`,{\n        method:\"post\",\n      })\n      console.log(\"Record deleted successfully\");\n      handleRefresh();\n      \n    }catch(error){\n      console.error('Error deleting record', error);\n    }\n  };\n  //<button onClick={()=>handleDelete(item.title)}>Delete</button>\n  \n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    try{\n      const response =await axios.post('http://0.0.0.0:9595/',{book_id: userInput});\n      console.log(response.data);\n\n    }catch (error){\n      console.error(error);\n    }\n  };\n\n    const handleButtonClick = () => {\n    const apiUrl = `https://www.googleapis.com/books/v1/volumes?q=${userInput}&projection=full&maxResults=5`;\n\n    fetch(apiUrl)\n      .then(response => response.json())\n      .then(data => {\n        const found = checkCharacterExists(data, userInput);\n        if (found) {\n         \n          const bookInfo = getBookInfo(data, userInput);\n          setImageUrl(bookInfo.imageLink);\n          setAuthor(bookInfo.author);\n          setGenre(bookInfo.genre);\n          setPages(bookInfo.pages);\n          setResult('');\n        } else {\n          setResult('Book Not found :(');\n          \n          setImageUrl('');\n          setAuthor('');\n          setGenre('');\n          setPages('');\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  const checkCharacterExists = (data, char) => {\n    const items = data.items || [];\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      const volumeInfo = item.volumeInfo || {};\n      const title = volumeInfo.title || '';\n      if (title.toLowerCase().includes(char.toLowerCase())) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const getBookInfo = (data, searchQuery) => {\n    const items = data.items || [];\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      const volumeInfo = item.volumeInfo || {};\n      const title = volumeInfo.title || '';\n      const imageLinks = volumeInfo.imageLinks || {};\n      const thumbnail = imageLinks.thumbnail || '';\n      const authors = volumeInfo.authors || [];\n      const author = authors.join(', ');\n      const genre = volumeInfo.categories ? volumeInfo.categories[0] : 'Unknown Genre';\n      const pages = volumeInfo.pageCount || 'Unknown';\n\n      if (title.toLowerCase().includes(searchQuery.toLowerCase())) {\n        return { imageLink: thumbnail, author, genre, pages };\n      }\n    }\n  };\n  \n  const handleKeyDown = (event)=> {\n    if (event.key === \"Enter\") {\n      handleButtonClick();\n    }\n  };\n  const handleInputChange = event => {\n    setUserInput(event.target.value);\n  };\n\n  return (\n    <div>\n      <br />\n    \n    \n    <div class=\"card\">\n        <div class=\"card-body\">\n        \n        <nav className=\"navbar\">\n          <span className=\"navbar-brand\" >Search Your Book <p>  </p></span>\n        </nav>\n        <div className=\"container\">\n          <div className=\"search-box\">\n            <input type=\"text\" value={userInput} onChange={handleInputChange} onKeyDown={handleKeyDown} \n            placeholder=\"Enter book name\" />\n            \n            <button onClick={handleButtonClick} type='submit'>Search</button>\n          </div>\n          \n          <div className=\"result-box\">\n            \n            <p></p>\n            {result && <p className=\"result\">{result}</p>}\n            {imageUrl && <img className=\"book-image\" src={imageUrl} alt=\"Book Cover\" width=\"150\" height=\"200\" class=\"d-inline-block 2align-center\" />}\n            {userInput && <p className=\"book-name\">: {userInput}</p>}\n            {author && <p className=\"book-info\">Author: {author}</p>}\n            {genre && <p className=\"book-info\">Genre: {genre}</p>}\n            {pages && <p className=\"book-info\">Pages: {pages}</p>}\n          </div>\n            <button   type=\"Submit\" onClick={handleCombinedClick} style={{display: 'block', margin: '0 auto',fontFamily: ' serif'}}  >Add Book</button>\n           \n          </div>\n        </div>\n      </div>\n      <hr  />\n      <h1 style={{textAlign: 'center', fontWeight:'bold'}} > <u>Library</u> </h1>\n      <br />\n      \n      {/* <div>\n        {data.map((item)=>(\n          <div key={item.id}>\n            <h3>{item.title}</h3>\n            <p>Author:{item.author}</p>\n            \n            <img src={item.image} alt={item.title} />\n            </div>\n        ))}\n      </div> */}\n      <div >\n        <div class='bookcard' style={{display:'flex',flexWrap:'wrap'}}>\n         \n        {data.map((item)=>(\n          <div key={item.id} style={{margin:'10px'}}>\n            <img src={item.image} alt={item.title} />\n            <p><b>{item.title}</b></p>\n            <p><b>Author :</b>  {item.author}</p>\n            <button onClick={()=>handleDelete(item.title)}  ><b>Delete </b></button>\n            <button onClick={()=>{\n        sendMessage(item.title);        \n      }} style={{marginLeft:'10px'}}><b>Trade</b></button>\n            \n          \n            </div>\n        ))}\n        </div>\n        \n\n      </div>\n      </div>\n\n  );\n};\n\nexport default Api;\n\n\n\n\n\n","/home/priyanshu/Desktop/rebook/main/reactapp/src/components/Cart.js",["94"],[],"/home/priyanshu/Desktop/rebook/main/reactapp/src/components/Signup.js",[],[],"/home/priyanshu/Desktop/rebook/main/reactapp/src/contexts/AuthContext.js",[],[],"/home/priyanshu/Desktop/rebook/main/reactapp/src/firebase.js",[],[],{"ruleId":"95","severity":1,"message":"96","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":14},{"ruleId":"95","severity":1,"message":"99","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":11},{"ruleId":"95","severity":1,"message":"100","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":13},{"ruleId":"95","severity":1,"message":"101","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":13},{"ruleId":"95","severity":1,"message":"102","line":6,"column":8,"nodeType":"97","messageId":"98","endLine":6,"endColumn":14},{"ruleId":"95","severity":1,"message":"103","line":9,"column":10,"nodeType":"97","messageId":"98","endLine":9,"endColumn":15},{"ruleId":"95","severity":1,"message":"104","line":9,"column":17,"nodeType":"97","messageId":"98","endLine":9,"endColumn":23},{"ruleId":"95","severity":1,"message":"105","line":9,"column":24,"nodeType":"97","messageId":"98","endLine":9,"endColumn":37},{"ruleId":"95","severity":1,"message":"106","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":16},{"ruleId":"95","severity":1,"message":"107","line":5,"column":18,"nodeType":"97","messageId":"98","endLine":5,"endColumn":26},{"ruleId":"95","severity":1,"message":"108","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":21},{"ruleId":"95","severity":1,"message":"109","line":7,"column":10,"nodeType":"97","messageId":"98","endLine":7,"endColumn":16},{"ruleId":"95","severity":1,"message":"110","line":7,"column":18,"nodeType":"97","messageId":"98","endLine":7,"endColumn":26},{"ruleId":"95","severity":1,"message":"111","line":8,"column":10,"nodeType":"97","messageId":"98","endLine":8,"endColumn":21},{"ruleId":"95","severity":1,"message":"112","line":9,"column":10,"nodeType":"97","messageId":"98","endLine":9,"endColumn":17},{"ruleId":"95","severity":1,"message":"113","line":9,"column":19,"nodeType":"97","messageId":"98","endLine":9,"endColumn":27},{"ruleId":"95","severity":1,"message":"114","line":10,"column":10,"nodeType":"97","messageId":"98","endLine":10,"endColumn":21},{"ruleId":"115","severity":1,"message":"116","line":116,"column":5,"nodeType":"117","messageId":"118","endLine":120,"endColumn":7},{"ruleId":"95","severity":1,"message":"119","line":116,"column":11,"nodeType":"97","messageId":"98","endLine":116,"endColumn":29},{"ruleId":"115","severity":1,"message":"116","line":122,"column":5,"nodeType":"120","messageId":"118","endLine":132,"endColumn":9},{"ruleId":"95","severity":1,"message":"121","line":8,"column":21,"nodeType":"97","messageId":"98","endLine":8,"endColumn":33},{"ruleId":"95","severity":1,"message":"122","line":28,"column":7,"nodeType":"97","messageId":"98","endLine":28,"endColumn":18},{"ruleId":"95","severity":1,"message":"123","line":23,"column":10,"nodeType":"97","messageId":"98","endLine":23,"endColumn":17},{"ruleId":"95","severity":1,"message":"124","line":11,"column":11,"nodeType":"97","messageId":"98","endLine":11,"endColumn":15},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Api' is defined but never used.","'Trade' is defined but never used.","'About' is defined but never used.","'Shared' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'BrowserRouter' is defined but never used.","'titlel' is assigned a value but never used.","'setList1' is assigned a value but never used.","'inputValue1' is assigned a value but never used.","'imagel' is assigned a value but never used.","'setList2' is assigned a value but never used.","'inputValue2' is assigned a value but never used.","'thorlau' is assigned a value but never used.","'setList3' is assigned a value but never used.","'inputValue3' is assigned a value but never used.","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","'handleInputChange2' is assigned a value but never used.","ReturnStatement","'setUserInput' is assigned a value but never used.","'sendMessage' is assigned a value but never used.","'message' is assigned a value but never used.","'item' is assigned a value but never used."]