{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebTransport = void 0;\nconst transport_1 = require(\"../transport\");\nconst debug_1 = require(\"debug\");\nconst debug = (0, debug_1.default)(\"engine:webtransport\");\nconst BINARY_HEADER = Buffer.of(54);\nfunction shouldIncludeBinaryHeader(packet, encoded) {\n  // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n  // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n  return packet.type === \"message\" && typeof packet.data !== \"string\" && encoded[0] >= 48 && encoded[0] <= 54;\n}\n/**\n * Reference: https://developer.mozilla.org/en-US/docs/Web/API/WebTransport_API\n */\nclass WebTransport extends transport_1.Transport {\n  constructor(session, stream, reader) {\n    super({\n      _query: {\n        EIO: \"4\"\n      }\n    });\n    this.session = session;\n    this.writer = stream.writable.getWriter();\n    (async () => {\n      let binaryFlag = false;\n      while (true) {\n        const {\n          value,\n          done\n        } = await reader.read();\n        if (done) {\n          debug(\"session is closed\");\n          break;\n        }\n        debug(\"received chunk: %o\", value);\n        if (!binaryFlag && value.byteLength === 1 && value[0] === 54) {\n          binaryFlag = true;\n          continue;\n        }\n        this.onPacket(this.parser.decodePacketFromBinary(value, binaryFlag, \"nodebuffer\"));\n        binaryFlag = false;\n      }\n    })();\n    session.closed.then(() => this.onClose());\n    this.writable = true;\n  }\n  get name() {\n    return \"webtransport\";\n  }\n  get supportsFraming() {\n    return true;\n  }\n  send(packets) {\n    this.writable = false;\n    for (let i = 0; i < packets.length; i++) {\n      const packet = packets[i];\n      const isLast = i + 1 === packets.length;\n      this.parser.encodePacketToBinary(packet, data => {\n        if (shouldIncludeBinaryHeader(packet, data)) {\n          debug(\"writing binary header\");\n          this.writer.write(BINARY_HEADER);\n        }\n        debug(\"writing chunk: %o\", data);\n        this.writer.write(data);\n        if (isLast) {\n          this.writable = true;\n          this.emit(\"drain\");\n        }\n      });\n    }\n  }\n  doClose(fn) {\n    debug(\"closing WebTransport session\");\n    this.session.close();\n    fn && fn();\n  }\n}\nexports.WebTransport = WebTransport;","map":{"version":3,"names":["Object","defineProperty","exports","value","WebTransport","transport_1","require","debug_1","debug","default","BINARY_HEADER","Buffer","of","shouldIncludeBinaryHeader","packet","encoded","type","data","Transport","constructor","session","stream","reader","_query","EIO","writer","writable","getWriter","binaryFlag","done","read","byteLength","onPacket","parser","decodePacketFromBinary","closed","then","onClose","name","supportsFraming","send","packets","i","length","isLast","encodePacketToBinary","write","emit","doClose","fn","close"],"sources":["/home/priyanshu/Desktop/rebook/main/reactapp/node_modules/engine.io/build/transports/webtransport.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebTransport = void 0;\nconst transport_1 = require(\"../transport\");\nconst debug_1 = require(\"debug\");\nconst debug = (0, debug_1.default)(\"engine:webtransport\");\nconst BINARY_HEADER = Buffer.of(54);\nfunction shouldIncludeBinaryHeader(packet, encoded) {\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    return (packet.type === \"message\" &&\n        typeof packet.data !== \"string\" &&\n        encoded[0] >= 48 &&\n        encoded[0] <= 54);\n}\n/**\n * Reference: https://developer.mozilla.org/en-US/docs/Web/API/WebTransport_API\n */\nclass WebTransport extends transport_1.Transport {\n    constructor(session, stream, reader) {\n        super({ _query: { EIO: \"4\" } });\n        this.session = session;\n        this.writer = stream.writable.getWriter();\n        (async () => {\n            let binaryFlag = false;\n            while (true) {\n                const { value, done } = await reader.read();\n                if (done) {\n                    debug(\"session is closed\");\n                    break;\n                }\n                debug(\"received chunk: %o\", value);\n                if (!binaryFlag && value.byteLength === 1 && value[0] === 54) {\n                    binaryFlag = true;\n                    continue;\n                }\n                this.onPacket(this.parser.decodePacketFromBinary(value, binaryFlag, \"nodebuffer\"));\n                binaryFlag = false;\n            }\n        })();\n        session.closed.then(() => this.onClose());\n        this.writable = true;\n    }\n    get name() {\n        return \"webtransport\";\n    }\n    get supportsFraming() {\n        return true;\n    }\n    send(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const isLast = i + 1 === packets.length;\n            this.parser.encodePacketToBinary(packet, (data) => {\n                if (shouldIncludeBinaryHeader(packet, data)) {\n                    debug(\"writing binary header\");\n                    this.writer.write(BINARY_HEADER);\n                }\n                debug(\"writing chunk: %o\", data);\n                this.writer.write(data);\n                if (isLast) {\n                    this.writable = true;\n                    this.emit(\"drain\");\n                }\n            });\n        }\n    }\n    doClose(fn) {\n        debug(\"closing WebTransport session\");\n        this.session.close();\n        fn && fn();\n    }\n}\nexports.WebTransport = WebTransport;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC3C,MAAMC,OAAO,GAAGD,OAAO,CAAC,OAAO,CAAC;AAChC,MAAME,KAAK,GAAG,CAAC,CAAC,EAAED,OAAO,CAACE,OAAO,EAAE,qBAAqB,CAAC;AACzD,MAAMC,aAAa,GAAGC,MAAM,CAACC,EAAE,CAAC,EAAE,CAAC;AACnC,SAASC,yBAAyBA,CAACC,MAAM,EAAEC,OAAO,EAAE;EAChD;EACA;EACA,OAAQD,MAAM,CAACE,IAAI,KAAK,SAAS,IAC7B,OAAOF,MAAM,CAACG,IAAI,KAAK,QAAQ,IAC/BF,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,IAChBA,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE;AACxB;AACA;AACA;AACA;AACA,MAAMX,YAAY,SAASC,WAAW,CAACa,SAAS,CAAC;EAC7CC,WAAWA,CAACC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAE;IACjC,KAAK,CAAC;MAAEC,MAAM,EAAE;QAAEC,GAAG,EAAE;MAAI;IAAE,CAAC,CAAC;IAC/B,IAAI,CAACJ,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACK,MAAM,GAAGJ,MAAM,CAACK,QAAQ,CAACC,SAAS,CAAC,CAAC;IACzC,CAAC,YAAY;MACT,IAAIC,UAAU,GAAG,KAAK;MACtB,OAAO,IAAI,EAAE;QACT,MAAM;UAAEzB,KAAK;UAAE0B;QAAK,CAAC,GAAG,MAAMP,MAAM,CAACQ,IAAI,CAAC,CAAC;QAC3C,IAAID,IAAI,EAAE;UACNrB,KAAK,CAAC,mBAAmB,CAAC;UAC1B;QACJ;QACAA,KAAK,CAAC,oBAAoB,EAAEL,KAAK,CAAC;QAClC,IAAI,CAACyB,UAAU,IAAIzB,KAAK,CAAC4B,UAAU,KAAK,CAAC,IAAI5B,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;UAC1DyB,UAAU,GAAG,IAAI;UACjB;QACJ;QACA,IAAI,CAACI,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,sBAAsB,CAAC/B,KAAK,EAAEyB,UAAU,EAAE,YAAY,CAAC,CAAC;QAClFA,UAAU,GAAG,KAAK;MACtB;IACJ,CAAC,EAAE,CAAC;IACJR,OAAO,CAACe,MAAM,CAACC,IAAI,CAAC,MAAM,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;IACzC,IAAI,CAACX,QAAQ,GAAG,IAAI;EACxB;EACA,IAAIY,IAAIA,CAAA,EAAG;IACP,OAAO,cAAc;EACzB;EACA,IAAIC,eAAeA,CAAA,EAAG;IAClB,OAAO,IAAI;EACf;EACAC,IAAIA,CAACC,OAAO,EAAE;IACV,IAAI,CAACf,QAAQ,GAAG,KAAK;IACrB,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,OAAO,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,MAAM5B,MAAM,GAAG2B,OAAO,CAACC,CAAC,CAAC;MACzB,MAAME,MAAM,GAAGF,CAAC,GAAG,CAAC,KAAKD,OAAO,CAACE,MAAM;MACvC,IAAI,CAACV,MAAM,CAACY,oBAAoB,CAAC/B,MAAM,EAAGG,IAAI,IAAK;QAC/C,IAAIJ,yBAAyB,CAACC,MAAM,EAAEG,IAAI,CAAC,EAAE;UACzCT,KAAK,CAAC,uBAAuB,CAAC;UAC9B,IAAI,CAACiB,MAAM,CAACqB,KAAK,CAACpC,aAAa,CAAC;QACpC;QACAF,KAAK,CAAC,mBAAmB,EAAES,IAAI,CAAC;QAChC,IAAI,CAACQ,MAAM,CAACqB,KAAK,CAAC7B,IAAI,CAAC;QACvB,IAAI2B,MAAM,EAAE;UACR,IAAI,CAAClB,QAAQ,GAAG,IAAI;UACpB,IAAI,CAACqB,IAAI,CAAC,OAAO,CAAC;QACtB;MACJ,CAAC,CAAC;IACN;EACJ;EACAC,OAAOA,CAACC,EAAE,EAAE;IACRzC,KAAK,CAAC,8BAA8B,CAAC;IACrC,IAAI,CAACY,OAAO,CAAC8B,KAAK,CAAC,CAAC;IACpBD,EAAE,IAAIA,EAAE,CAAC,CAAC;EACd;AACJ;AACA/C,OAAO,CAACE,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}